using System;
using System.Collections;
using System.Collections.Generic;
using System.IO;
using UnityEngine;
using SQLite4Unity3d;

public class TableSQLInfo {
  public List<string> column_list = new List<string>();
  public string create_sql;
  public List<string> insert_list = new List<string>();
}
public class DynamicDBInfo
{
  public Dictionary<string, TableSQLInfo> dic = new Dictionary<string, TableSQLInfo>();
  TableSQLInfo table_info;
  public DynamicDBInfo() {
      table_info = new TableSQLInfo();
      table_info.column_list.Add("id");
      table_info.column_list.Add("int");
      table_info.column_list.Add("fb_id");
      table_info.column_list.Add("string");
      table_info.column_list.Add("gs_id");
      table_info.column_list.Add("string");
      table_info.column_list.Add("name");
      table_info.column_list.Add("string");
      table_info.column_list.Add("head_LocPath");
      table_info.column_list.Add("string");
      table_info.column_list.Add("head_WebPath");
      table_info.column_list.Add("string");
      table_info.column_list.Add("stage");
      table_info.column_list.Add("int");
      table_info.insert_list.Add("insert into FriendData values (1,'\"\"','\"\"','\"\"','\"\"','\"\"',10)");
      table_info.create_sql = "create table FriendData(id integer PRIMARY KEY NOT NULL,fb_id,gs_id,name,head_LocPath,head_WebPath,stage)";
      dic.Add("FriendData", table_info);
      table_info = new TableSQLInfo();
      table_info.column_list.Add("id");
      table_info.column_list.Add("int");
      table_info.column_list.Add("stage_id");
      table_info.column_list.Add("int");
      table_info.column_list.Add("highscore");
      table_info.column_list.Add("int");
      table_info.column_list.Add("star_num");
      table_info.column_list.Add("int");
      table_info.column_list.Add("try_num");
      table_info.column_list.Add("int");
      table_info.column_list.Add("time_cost");
      table_info.column_list.Add("float");
      table_info.column_list.Add("skill_refresh_num");
      table_info.column_list.Add("int");
      table_info.column_list.Add("skill_bomb_num");
      table_info.column_list.Add("int");
      table_info.column_list.Add("skill_add_timer_num");
      table_info.column_list.Add("int");
      table_info.column_list.Add("skill_jewels_num");
      table_info.column_list.Add("int");
      table_info.column_list.Add("skill_unlock_num");
      table_info.column_list.Add("int");
      table_info.column_list.Add("headicon");
      table_info.column_list.Add("int");
      table_info.create_sql = "create table Highscore(id integer PRIMARY KEY NOT NULL,stage_id,highscore,star_num,try_num,time_cost,skill_refresh_num,skill_bomb_num,skill_add_timer_num,skill_jewels_num,skill_unlock_num,headicon)";
      dic.Add("Highscore", table_info);
      table_info = new TableSQLInfo();
      table_info.column_list.Add("id");
      table_info.column_list.Add("int");
      table_info.column_list.Add("boardInfo");
      table_info.column_list.Add("string");
      table_info.column_list.Add("boardInfo_new");
      table_info.column_list.Add("string");
      table_info.insert_list.Add("insert into LeaderBoard values (1,'')");
      table_info.create_sql = "create table LeaderBoard(id integer PRIMARY KEY NOT NULL,boardInfo)";
      dic.Add("LeaderBoard", table_info);
      table_info = new TableSQLInfo();
      table_info.column_list.Add("id");
      table_info.column_list.Add("int");
      table_info.column_list.Add("stage");
      table_info.column_list.Add("int");
      table_info.column_list.Add("Life");
      table_info.column_list.Add("int");
      table_info.column_list.Add("MaxLifeTime");
      table_info.column_list.Add("string");
      table_info.column_list.Add("MaxLife");
      table_info.column_list.Add("int");
      table_info.column_list.Add("Infinite_time");
      table_info.column_list.Add("string");
      table_info.column_list.Add("Gold");
      table_info.column_list.Add("int");
      table_info.column_list.Add("Redraw");
      table_info.column_list.Add("int");
      table_info.column_list.Add("Bomb");
      table_info.column_list.Add("int");
      table_info.column_list.Add("Clock");
      table_info.column_list.Add("int");
      table_info.column_list.Add("Jewel");
      table_info.column_list.Add("int");
      table_info.column_list.Add("Unchain");
      table_info.column_list.Add("int");
      table_info.column_list.Add("device_id");
      table_info.column_list.Add("string");
      table_info.column_list.Add("player_update");
      table_info.column_list.Add("string");
      table_info.column_list.Add("highscore");
      table_info.column_list.Add("string");
      table_info.insert_list.Add("insert into PlayerInfo values (1,1,5,'0',5,'0',50,1,1,1,1,0,'0','0','0')");
      table_info.create_sql = "create table PlayerInfo(id integer PRIMARY KEY NOT NULL,stage,Life,MaxLifeTime,MaxLife,Infinite_time,Gold,Redraw,Bomb,Clock,Jewel,Unchain,device_id,player_update,highscore)";
      dic.Add("PlayerInfo", table_info);
      table_info = new TableSQLInfo();
      table_info.column_list.Add("id");
      table_info.column_list.Add("int");
      table_info.column_list.Add("ItemOrder");
      table_info.column_list.Add("int");
      table_info.column_list.Add("best");
      table_info.column_list.Add("int");
      table_info.column_list.Add("hot");
      table_info.column_list.Add("int");
      table_info.insert_list.Add("insert into ShopOrder values (101,1,0,0)");
      table_info.insert_list.Add("insert into ShopOrder values (102,2,0,0)");
      table_info.insert_list.Add("insert into ShopOrder values (103,3,0,1)");
      table_info.insert_list.Add("insert into ShopOrder values (104,4,0,0)");
      table_info.insert_list.Add("insert into ShopOrder values (105,5,0,0)");
      table_info.insert_list.Add("insert into ShopOrder values (106,6,1,0)");
      table_info.insert_list.Add("insert into ShopOrder values (201,7,0,0)");
      table_info.insert_list.Add("insert into ShopOrder values (202,8,0,0)");
      table_info.insert_list.Add("insert into ShopOrder values (203,9,0,0)");
      table_info.create_sql = "create table ShopOrder(id integer PRIMARY KEY NOT NULL,ItemOrder,best,hot)";
      dic.Add("ShopOrder", table_info);
    }
}
